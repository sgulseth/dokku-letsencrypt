#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

start_nginx() {
  case "$DOKKU_DISTRO" in
    debian)
      sudo /usr/sbin/invoke-rc.d nginx start > /dev/null
      ;;

    ubuntu)
      sudo /etc/init.d/nginx start > /dev/null
      ;;

    opensuse)
      sudo /sbin/service nginx start > /dev/null
      ;;
  esac
}

stop_nginx() {
  case "$DOKKU_DISTRO" in
    debian)
      sudo /usr/sbin/invoke-rc.d nginx stop> /dev/null
      ;;

    ubuntu)
      sudo /etc/init.d/nginx stop > /dev/null
      ;;

    opensuse)
      sudo /sbin/service nginx stop > /dev/null
      ;;
  esac
}

case "$1" in
  letsencrypt:add)
    [[ -z $2 ]] && dokku_log_fail "Please specify an app to run the command on"
    verify_app_name "$2"
    APP="$2"; DOMAIN="$3";

    LETSENCRYPT_WORKDIR=$DOKKU_ROOT/letsencrypt

    mkdir -p "$DOKKU_ROOT/$APP/tls"
    if [ ! -d $LETSENCRYPT_WORKDIR ]; then
      git clone https://github.com/letsencrypt/letsencrypt $LETSENCRYPT_WORKDIR
    fi
    stop_nginx
    $LETSENCRYPT_WORKDIR/letsencrypt-auto --agree-dev-preview --server https://acme-v01.api.letsencrypt.org/directory -d $DOMAIN auth
    start_nginx
    cp "/etc/letsencrypt/live/$DOMAIN/privkey.pem" "$DOKKU_ROOT/$APP/tls/privkey.key"
    cp "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" "$DOKKU_ROOT/$APP/tls/fullchain.crt"
    chown -hR dokku:dokku "$DOKKU_ROOT/$APP/tls/"
    nginx_build_config $APP
    ;;
  help | letsencrypt:help)
    cat && cat<<EOF
    letsencrypt:add <app> <domain>, generate certificate for <domain> and configure nginx with it"
EOF
    ;;
  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;
esac
